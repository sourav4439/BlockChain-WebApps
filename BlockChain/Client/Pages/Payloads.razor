@page "/payloads"
<!-- TODO: Add using and inject statements -->

<h3>Pending Transactions</h3>

@if (payloads == null)
{
<p><em>Loading...</em></p> }
else
{
<!-- TODO: Render a table with all of the pending transactions
           This table should include all of the fields for each pending transaction
  -->
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th scope="col">User</th>
                            <th scope="col">TransactionTypes</th>
                            <th scope="col">Item</th>
                            <th scope="col">Amount</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in payloads)
                        {
                            <tr>
                                <th scope="row">@item.User</th>
                                <td>@item.TransactionTypes</td>
                                <td>@item.Item</td>
                                <td>@item.Amount</td>
                            </tr>
                            
                          }


                    </tbody>
                </table>
  }

<p></p>

<p>@submitResponse</p>


<!-- TODO: Add EditForm to submit a new transaction to the server -->
<EditForm Model="@Payload" OnValidSubmit="@HandleValidSubmit">
    <h3>Add Payload</h3>
    <hr />
    <div class="form-group row">
        <label for="User" class="col-sm-2 col-form-label">
            User
        </label>
        <div class="col-sm-10">
            <InputText id="User" class="form-control" placeholder="User"
                       @bind-Value="Payload.User" />
        </div>
    </div>
    <div class="form-group row">
        <label for="Item" class="col-sm-2 col-form-label">
            Item
        </label>
        <div class="col-sm-10">
            <InputText id="Item" class="form-control" placeholder="Item"
                       @bind-Value="Payload.Item" />
        </div>
    </div>
    <div class="form-group row">
        <label for="Item" class="col-sm-2 col-form-label">
            Amount
        </label>
        <div class="col-sm-10">
            <InputNumber id="Item" class="form-control" placeholder="Amount"
                       @bind-Value="Payload.Amount" />
        </div>
    </div>
    <div class="form-group row">
        <label for="department" class="col-sm-2 col-form-label">
            TransactionTypes
        </label>
        <div class="col-sm-10">
            <InputSelect id="department" @bind-Value="Payload.TransactionTypes" class="form-control">
                @foreach (var t in Enum.GetValues(typeof(TransactionTypes)))
                {
                    <option value="@t">@t</option>}
            </InputSelect>
        </div>
    </div>
    <input type="submit" value="ADD" class="btn btn-outline-primary" />
</EditForm>

@code { 
    private IEnumerable<Payload> payloads;
    private Payload Payload = new Payload();
    private string submitResponse = "";
    [Inject]
    public PendingTransactionService Service { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await  Loadpayload();
    }

    private async Task HandleValidSubmit()
    {
        submitResponse= await Service.AddPayload(Payload);

        await Loadpayload();
        Payload = new Payload();
    }

    async Task Loadpayload()
    {
        payloads= await Service.GetPayloads();
    }
 }
